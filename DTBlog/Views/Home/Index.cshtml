@model HomeViewModel

<section>
    <div class="blog-container">
        @foreach (Blog blog in Model.AllBlogsDesc)
        {
            <partial name="_BlogCard" model="blog" />
        }
    </div>
</section>
<hr>
<section>
    <h3>C# MVC</h3>
    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem sed sapiente nihil! Dicta, sint reiciendis! Magni
        porro voluptate commodi quaerat necessitatibus officiis, ipsam, quia reiciendis in eius unde hic optio!</p>
</section>
<hr>
<section>
    <h3>Javascript</h3>
    <p>Well compared to CSS, Javascript is much more intuitive! Read through the basic <a
            href="https://www.w3schools.com/js/default.asp" target="_blank">w3schools.com</a> tutorials first then went
        onto Ania Kub&oacutews <a href="https://www.youtube.com/c/AniaKub%C3%B3w/" target="_blank">YouTube</a> channel
        to go through a few of the Javascript tutorials. I followed along and built a few of the games, with the
        intention of adding a few bits of my own to them. This led me to a deeper investigation of Javascript timers and
        the DOM and then further wrestling with CSS! <br>For my Javascript efforts see <a
            href="/Ania/ania.html">here</a>. I only had time to style the <a href="Ania/Flappy/index.html">Flappy
            Birds</a> game, but this is something I intend to come back to every now and then to brush up on both my
        Javascript and CSS skills.</p>
</section>
<hr>
<section>
    <h3>CSS is so easy! HAIYAA!</h3>
    <p>Well the basics look easy enough, but once you get into things it seems to get complicated very quickly! Maybe
        the initial simplicity was my downfall and I think that it led me into a false sense of security. With other
        languages it seems that you can get a lot done with just the basics then build as needed, but with CSS I feel
        like I'm reading articles and following tutorials for the simplest thing! OK so I just want an image to fit in
        that div, without overflowing, chopping bits off or adding borders. Then I want some text to the left and want
        it all to resize nicely. Sounds easy right?
        <br>The frustrating thing is that a lot of CSS properties have an effect for the parent and the child, but most
        of the tutorials only focus on one or the other. Also many CSS properties are shortcuts and apply defaults, such
        as display: flex, which lays out how the container operates plus sets 3 properties for the children.
        <br>Well I fought the battle and the homepage now has a photo of me on it! I like the extra colour it brings,
        but still not sure about that photo!
    </p>
</section>
<hr>
<section>
    <h3>Blog Post #1 - Basic Home Page First Draft!</h3>
    <p>So! My first ever blog post!</p>
    <p>This blog post doesn't really need to say much as it is best explained by this actual page itself. Thanks to
        Timothy Unkert for the YouTube lesson <a href="https://youtu.be/YCaUBFZw_uo" target="_blank">Building a blog in
            html and css</a>. Thanks also for opening my eyes to Visual Studio Code and Emmet!
        <br>I wanted to start with some basic html and css. No frills, just basic stuff so I can understand whats going
        on. I'm going to build on this in later lessons, so this initial page will be pretty dull!
    </p>
    <p>If you are visiting this page from the future, the original draft #1 can actually be found <a
            href="HomePageFirstDraft.html">here</a>!</p>

</section>